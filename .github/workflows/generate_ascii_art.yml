name: Generate ASCII Art

on:
  schedule:
    - cron: '0 */4 * * *'  # 每4小时运行一次
  workflow_dispatch:

jobs:
  generate_art:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Create arts directory
        run: mkdir -p arts

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install requests Pillow numpy

      - name: Generate ASCII Art
        run: |
          echo 'import requests
          from PIL import Image
          import numpy as np
          import io
          import random
          import uuid
          from datetime import datetime

          keywords = ["nature", "abstract", "city", "animals", "landscape", "people", "space"]

          def fetch_random_image(api_key):
              keyword = random.choice(keywords)  # 随机选择一个关键词
              response = requests.get(f"https://api.pexels.com/v1/search?query={keyword}&per_page=30", 
                                      headers={"Authorization": api_key})
              data = response.json()
              image_url = random.choice(data["photos"])["src"]["original"]
              return image_url

          def image_to_ascii(image_url):
              response = requests.get(image_url)
              image = Image.open(io.BytesIO(response.content))
              image = image.resize((100, 50))
              image = image.convert("L")
              ascii_chars = "@%#*+=-:. "
              pixels = np.array(image)

              ascii_image = ""
              for row in pixels:
                  ascii_image += "".join([ascii_chars[pixel // 32] for pixel in row]) + "\n"  # 保留换行
              return ascii_image

          api_key = "${{ secrets.PEXELS_API_KEY }}"
          image_url = fetch_random_image(api_key)
          ascii_art = image_to_ascii(image_url)

          # 使用 UUID 命名文件并保存为 .md 文件
          filename = f"arts/{uuid.uuid4()}.md"
          
          with open(filename, "w") as f:
              f.write(ascii_art)' > generate_ascii_art.py

          python generate_ascii_art.py

      - name: Commit ASCII Art to repository
        uses: stefanzweifel/git-auto-commit-action@v4.3.0
        with:
          commit_message: 'Add generated ASCII Art'
          file_pattern: 'arts/*.md'
          branch: 'main'